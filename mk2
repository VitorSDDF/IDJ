#--------------------------------------------------------
#Assume-se o linux como sistema operacional padrão:
#--------------------------------------------------------
#Compilador a ser utilizado
CC = g++
#Comando para remover um diretório recursivamente e ignorar caso não exista
RMDIR = rm -rf
#Comando para remover um arquivo e ignorar caso não exista
RM = rm -f

# "Flags" para a geração automática das dependências
DEP_FLAGS = -MT $@ -MMD -MP -MF $(DEP_PATH)/$*.d
#Diretivas que são utilizadas na compilação de cada objeto
DIRECTIVES = -std=c++11 -Wall -Wextra -c -g -I $(HEADER_PATH)
#Diretivas que são utilizadas na "linkagem" dos objetos gerando o executável
LIBS = -lSDL2 -lSDL2_image -lSDL2_mixer -lSDL2_ttf -lm

# Um caminho para guardar e acessar cada tipo de arquivo .h(headers).
# .cpp(souces), .o(objects) e .d (dependencies),respectivamente
HEADER_PATH = include
SRC_PATH = src  
BIN_PATH = bin 
DEP_PATH = dep 

#uma lista de arquivos para cada tipo de arquivo:
#.cpp .o e .d,respectivamente
CPP_FILES = $(wildcard $(SRC_PATH)/*.cpp)
OBJ_FILES = $(addprefix $(BIN_PATH)/,$(notdir $(CPP_FILES:.cpp=.o)))
DEP_FILES = $(wildcard $(DEP_PATH)/*.d)

# Nome do executável final
EXEC = 110143574_T3

#---------------------------------------------------------------------------
#Caso o sistema operacional seja windows,modifica-se as seguintes variáveis:
#---------------------------------------------------------------------------
ifeq ($(OS),Windows_NT)
#Comando para remover um diretório recursivamente e ignorar caso não exista
RMDIR = rd /s /q
#Comando para deletar um arquivo
RM = del

#Caminho para os "headers" da biblioteca SDL2 no windows
#MODIFIQUE AQUI DE ACORDO COM O CAMINHO CONFIGURADO
# (SEGUNDO O TUTORIAL DE INSTALAÇÃO DO SDL NO WINDOWS)
SDL_PATH = C:\SDL-2-2.0.5\x86_64-w64-mingw32

#Adiciona-se diretivas especificas do windows
DIRECTIVES += -I $(SDL_PATH)\include
#Substitui as diretivas de "linkagem" adicionando flags próprias do Windows
LIBS = -L $(SDL_PATH)\lib -lmmingw32 -lSDL2main
		-lSDL2 -lSDL2_image -lSDL2_mixer -lSDL2_ttf -lm

#Nome do executável final(deve ter extensão .exe necessaria para o windows))
EXEC := $(EXEC).exe
#---------------------------------------------------------------------------

else 
UNAME_S := $(shell uname -s)

#---------------------------------------------------------------------------
#Caso o sistema operacional seja o mac OS,modifica-se as seguintes variáveis
#---------------------------------------------------------------------------
ifeq ($(UNAME_S), Darwin)
LIBS = -lm -framework SDL2 -framework SDL2_image -framework SDL2_mixer -framework SDL2_ttf
#------------------------------------------------------------------------------------------
endif
endif

#Regra de criação do executável final:
$(EXEC): $(OBJ FILES)
	$(CC) -o $@ $^ $(LIBS)
#Regra de inferência para criação dos objetos de compilação:
$(BIN_PATH)/%.o: 
	$(SRC_PATH)/%.cpp
#De acordo com o SO,tenta criar os diretórios
#dep e bin e ignora caso eles já existam
#------------------------------------------------------
ifeq ($OS),Windows_NT)
	@if not exists $(DEP_PATH) @mkdir $(DEP_PATH)
	@if not exists $(BIN_PATH) @mkdir $(BIN_PATH)
else
	@mkdir -p $(DEP_PATH) $(BIN_PATH)	
endif
#Gera os objetos usando diretivas de compilação e as respectivas dependências
	$(CC) $(DEP_FLAGS) -c -o $@ $< $(DIRECTIVES)
#Inclui as regras geradas pelos arquivos de dependência
-include $(DEP_FILES)
#Regra para limpar/deletar todos os arquivos e diretórios criados pelo make
clean:
	$(RMDIR) $(BIN_PATH) $(DEP_PATH)
	$(RM) $(EXEC)
